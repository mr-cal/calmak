#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/* layers
 * ────── */

#define DEF 0
#define NAV 1
#define NUM 2
#define FN 3
#define SYS 4

#define XXX &none
#define ___ &trans


/* global settings
 * ─────────────── */

#define QUICK_TAP_MS 175

// sticky key
&sk {
    release-after-ms = <1500>;
};

// sticky layer
&sl {
    ignore-modifiers; // allow chording sticky mods & layers
};

// layer tap
&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};


/* custom behaviors
 * ──────────────── */

// reuse basic mod-morph scheme
#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

// tap: qmark | shift + tap: excl
SIMPLE_MORPH(qx_morph, SFT, &kp QMARK, &kp EXCL)

// tap: comma | shift + tap: semicolon
SIMPLE_MORPH(comma_morph, SFT, &kp COMMA, &kp SEMICOLON)

// tap: dot | shift + tap: colon
SIMPLE_MORPH(dot_morph, SFT, &kp DOT, &kp COLON)


/* combos
 * ────── */

// tap: left/right parenthesis | shft + tap: less-than/greater-than
SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LT)
SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GT)

// tap: hyphen | shft + tap: underscore
SIMPLE_MORPH(hypn_und, SFT, &kp MINUS, &kp UNDER)

#include "combos.dtsi" 


/* key positions
 * ─────────────
  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

// use the 5 column matrix for the chocofi keyboard
/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};


/* home row mods
 * ───────────── */

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <200>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs
MAKE_HRM(hmr_cm, &kp, &comma_morph, KEYS_L THUMBS)  // right hand - comma         + semicolon
MAKE_HRM(hmr_dt, &kp, &dot_morph, KEYS_L THUMBS)    // right hand - period        + colon
MAKE_HRM(hmr_qx, &kp, &qx_morph, KEYS_L THUMBS)     // right hand - question mark + exclamation point

// HRM combo hack - workaround for lack of tap-only combos (ZMK issue #544)
#define ZMK_COMBO_8(NAME, TAP, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE, HOLD, SIDE) \
    MAKE_HRM(hm_combo_ ## NAME, &kp, TAP, SIDE THUMBS) \
    ZMK_COMBO_6(NAME, &hm_combo_ ## NAME HOLD 0, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE)


/* smart shift
 * ─────────── */

// tap: sticky-shift | shift + tap/double-tap: caps-word | hold: shift
ZMK_MOD_MORPH(smart_shft,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};


/* smart num
 * ───────── */

// tap: num-word | hold: num-layer
#define SMART_NUM &smart_num NUM NUM
ZMK_HOLD_TAP(smart_num, bindings = <&mo>, <&num_word>; flavor = "balanced";
             tapping-term-ms = <200>; quick-tap-ms = <QUICK_TAP_MS>;)
ZMK_TAP_DANCE(num_dance, bindings = <&num_word NUM>;
              tapping-term-ms = <200>;)

/* key mappings
 * ──────────── */

ZMK_LAYER(base,
// ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭───────────┬────────────┬───────────────┬───────────────┬───────────────╮
// │     q      │     w      │     f      │     p      │     b      │   │     j     │      l     │       u       │       y       │      '"       │
      &kp Q        &kp W        &kp F        &kp P        &kp B            &kp J        &kp L         &kp U           &kp Y           &kp SQT
// ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├───────────┼────────────┼───────────────┼───────────────┼───────────────┤
// │     a      │     r      │     s      │     t      │     g      │   │     m     │      n     │       e       │       i       │       o       │
      &kp A        &kp R        &kp S        &kp T        &kp G            &kp M        &kp N         &kp E           &kp I           &kp O
// ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├───────────┼────────────┼───────────────┼───────────────┼───────────────┤
// │ z control  │  x shift   │   c gui    │   d alt    │     v      │   │     k     │     h      │    ,; gui     │   .: shift    │  ?! control   │
    &hml LCTRL Z &hml LSHFT X &hml LGUI C  &hml LALT D    &kp V            &kp K     &hmr RALT H  &hmr_cm RGUI 0  &hmr_dt RSHFT 0 &hmr_qx RCTRL 0
// ╰────────────┴────────────┼────────────┼────────────┼────────────┤   ├───────────┼────────────┼───────────────┼───────────────┴───────────────╯
//                           │    num     │ space/nav  │    sys     │   │   func    │ smart shift│      tab      │
                               SMART_NUM   &lt NAV SPACE  &mo SYS          &mo FN     &smart_shft     &kp TAB
//                           ╰────────────┴────────────┴────────────╯   ╰───────────┴────────────┴───────────────╯
)

ZMK_LAYER(nav,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     -     │     -     │     -     │     -     │     -     │   │  page up  │   home    │    up     │    end    │     -     │
        ___         ___         ___         ___         ___          &kp PG_UP   &kp HOME     &kp UP      &kp END       ___    
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │ page down │   left    │   down    │   right   │     -     │
        ___         ___         ___         ___         ___          &kp PG_DN   &kp LEFT    &kp DOWN    &kp RIGHT      ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │  control  │   shift   │    gui    │    alt    │     -     │   │     -     │     -     │     -     │     -     │     -     │
     &sk LCTRL   &sk LSHFT   &sk LGUI    &sk LALT       ___             ___         ___         ___         ___         ___
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │     -     │     -     │     -     │   │     -     │     -     │     -     │
                                ___         ___         ___             ___         ___         ___
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)

// use left-hand meta keys because many apps break with numbers and right hand meta keys
// e.g. setting headers in onenote with control+alt+<num>
ZMK_LAYER(num,
 // ╭───────────┬───────────┬───────────┬───────────┬───────────╮  ╭───────────┬─────────────┬──────────────┬──────────────┬──────────────╮
 // │     -     │     7     │     8     │     9     │     -     │  │     -     │      -      │       -      │       -      │       -      │
         ___       &kp N7      &kp N8      &kp N9        ___            ___          ___           ___           ___           ___
 // ├───────────┼───────────┼───────────┼───────────┼───────────┤  ├───────────┼─────────────┼──────────────┼──────────────┼──────────────┤
 // │     -     │     4     │     5     │     5     │     -     │  │     -     │      -      │       -      │       -      │       -      │
         ___       &kp N4      &kp N5      &kp N6        ___            ___          ___           ___           ___          ___
 // ├───────────┼───────────┼───────────┼───────────┼───────────┤  ├───────────┼─────────────┼──────────────┼──────────────┼──────────────┤
 // │     0     │     1     │     2     │     3     │     -     │  │     -     │    h alt    │    , ; gui   │   . : shift  │  ? ! control │
       &kp N0      &kp N1      &kp N2      &kp N3        ___            ___    &hmr LALT H   &hmr_cm LGUI 0 &hmr_dt LSHFT 0 &hmr_qx LCTRL 0
 // ╰───────────┴───────────┼───────────┼───────────┼───────────┤  ├───────────┼─────────────┼──────────────┼──────────────┴──────────────╯
 //                         │     -     │     -     │     -     │  │     -     │      -      │       -      │
                                 ___         ___         ___            ___          ___           ___
 //                         ╰───────────┴───────────┴───────────╯  ╰───────────┴─────────────┴──────────────╯
)

ZMK_LAYER(fn,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___           &kp F12     &kp F7      &kp F8      &kp F9        ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___           &kp F11     &kp F4      &kp F5      &kp F6        ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │  control  │   shift   │    gui    │    alt    │     -     │   │     -     │     -     │     -     │     -     │
     &sk LCTRL   &sk LSHFT   &sk LGUI    &sk LALT       ___           &kp F10     &kp F1      &kp F2      &kp F3        ___
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │     -     │     -     │     -     │   │     -     │     -     │     -     │
                                ___         ___         ___             ___         ___         ___
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)

ZMK_LAYER(sys,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     -     │     -     │     -     │     -     │     -     │   │ screenshot│    mute   │  vol down │  vol up   │     -     │
        ___         ___         ___         ___         ___          &kp PSCRN  &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP    ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___             ___         ___         ___         ___         ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___             ___         ___         ___         ___         ___
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │     -     │     -     │     -     │   │     -     │     -     │     -     │
                                ___         ___         ___             ___         ___         ___
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)
