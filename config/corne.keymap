#include <behaviors.dtsi>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/* layers
 * ────── */

#define DEF 0
#define NAV 1
#define FN 2
#define NUM 3
#define SYS 4

#define XXX &none
#define ___ &trans


/* global settings
 * ─────────────── */

#define QUICK_TAP_MS 175

// sticky key
&sk {
    release-after-ms = <900>;  // release after 0.9s
    quick-release;             // no double capitalization when rolling keys
};

// sticky layer
&sl {
    ignore-modifiers;          // allow chording sticky mods & layers
};

// layer tap
&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};


/* custom behaviors
 * ──────────────── */

// reuse basic mod-morph scheme
#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )


/* combos
 * ────── */

// tap: left/right parenthesis | shft + tap: less-than/greater-than
SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LT)
SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GT)

#include "combos.dtsi" 


/* key positions
 * ─────────────
  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

// use the 5 column matrix for the chocofi keyboard
/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};


/* navigation 
 * ────────── */

// long-tap action on hold, short-tap action on all interrupts
#define MT_CORE \
    flavor = "tap-preferred"; \
    tapping-term-ms = <220>; \
    quick-tap-ms = <220>; \
    hold-trigger-key-positions = <0>;

&mt { MT_CORE };
ZMK_HOLD_TAP(mt_home, bindings = <&masked_home>, <&kp>; MT_CORE)
ZMK_HOLD_TAP(mt_end, bindings = <&masked_end>, <&kp>; MT_CORE)

#define NAV_LEFT  &mt_home 0   LEFT    // tap: left  | long-tap: beginning of line
#define NAV_RIGHT &mt_end 0    RIGHT   // tap: right | long-tap: end       of line
#define NAV_UP    &mt LC(HOME) UP      // tap: up    | long-tap: beginning of document
#define NAV_DOWN  &mt LC(END)  DOWN    // tap: down  | long-tap: end       of document
#define NAV_BSPC  &mt LC(BSPC) BSPC    // tap: bspc  | long-tap: backspace word
#define NAV_DEL   &mt LC(DEL)  DEL     // tap: del   | long-tap: delete word

// mask CTRL when holding left/right to avoid accidental jumps to beginning/end of document
#define MASK_MODS(NAME, MODS, BINDING) \
    ZMK_MOD_MORPH(NAME, \
        bindings = <BINDING>, <BINDING>; \
        mods = <MODS>; \
    )
MASK_MODS(masked_home, (MOD_LCTL), &kp HOME)
MASK_MODS(masked_end,  (MOD_LCTL), &kp END)


/* smart space
 * ─────────── */

// tap: space | shift + tap: dot -> space -> sticky shift | hold: activate layer
ZMK_HOLD_TAP(lt_spc,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&spc_morph>;
)

SIMPLE_MORPH(
    spc_morph,
    SFT,
    &kp SPACE,
    &dot_spc
)

ZMK_MACRO(dot_spc,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp DOT &kp SPACE &sk LSHFT>;
)


/* smart shift
 * ─────────── */

// tap: sticky-shift | shift + tap/double-tap: caps-word | hold: shift
ZMK_MOD_MORPH(smart_shft,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};


/* key mappings
 * ──────────── */

ZMK_LAYER(base,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     q     │     w     │     f     │     p     │     b     │   │     j     │     l     │     u     │     y     │     ;:    │
      &kp Q       &kp W       &kp F       &kp P       &kp B           &kp J       &kp L       &kp U       &kp Y       &kp SEMI
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     a     │     r     │     s     │     t     │     g     │   │     m     │     n     │     e     │     i     │     o     │
      &kp A       &kp R       &kp S       &kp T       &kp G           &kp M       &kp N       &kp E       &kp I       &kp O
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     z     │     x     │     c     │     d     │     v     │   │     k     │     h     │    ,<     │    .>     │    /?     │
      &kp Z       &kp X       &kp C       &kp D       &kp V           &kp K       &kp H      &kp COMMA  &kp PERIOD   &kp QMARK
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │    ---    │ space/nav │    ---    │   │enter/func │smart shift│ smart num │
//                         │           │           │           │   │           │           │           │
                                ___    &lt NAV SPACE    ___           &mo FN    &smart_shft   &mo NUM
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)

ZMK_LAYER(nav,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     -     │     -     │     -     │     -     │     -     │   │  page up  │ backspace │ up/d-home │   delete  │     -     │
        ___         ___         ___         ___         ___          &kp PG_UP   NAV_BSPC     NAV_UP      NAV_DEL       ___    
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │   shift   │  control  │    gui    │    alt    │     -     │   │ page down │left/l-home│down/d-end │right/l-end│   enter   │
     &sk LSHFT   &sk LCTRL   &sk LGUI    &sk LALT       ___          &kp PG_DN   NAV_LEFT    NAV_DOWN    NAV_RIGHT    &kp RET 
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │  insert   │   tab     │     -     │     -     │
        ___         ___         ___         ___        ___              ___       &kp INS     &kp TAB       ___         ___
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │     -     │     -     │     -     │   │     -     │     -     │     -     │
                                ___         ___         ___             ___         ___         ___
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)

ZMK_LAYER(fn,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___           &kp F12     &kp F7      &kp F8      &kp F9        ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │   shift   │  control  │    gui    │    alt    │     -     │   │     -     │     -     │     -     │     -     │     -     │
     &sk LSHFT   &sk LCTRL   &sk LGUI    &sk LALT       ___           &kp F11     &kp F4      &kp F5      &kp F6        ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___           &kp F10     &kp F1      &kp F2      &kp F3        ___
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │           │           │           │   │           │           │           │
//                         │     -     │     -     │     -     │   │     -     │     -     │     -     │
                                ___         ___         ___             ___         ___         ___
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)

ZMK_LAYER(num,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___             ___       &kp N7      &kp N8      &kp N9        ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │   shift   │  control  │    gui    │    alt    │     -     │   │     -     │     -     │     -     │     -     │     -     │
     &sk LSHFT   &sk LCTRL   &sk LGUI    &sk LALT       ___             ___       &kp N4      &kp N5      &kp N6        ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___           &kp N0      &kp N1      &kp N2      &kp N3        ___
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │     -     │     -     │     -     │   │     -     │     -     │     -     │
                                ___         ___         ___             ___         ___         ___
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)

ZMK_LAYER(sys,
// ╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___             ___         ___         ___         ___         ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___             ___         ___         ___         ___         ___
// ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
// │     -     │     -     │     -     │     -     │     -     │   │     -     │     -     │     -     │     -     │     -     │
        ___         ___         ___         ___         ___             ___         ___         ___         ___         ___
// ╰───────────┴───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┴───────────╯
//                         │     -     │     -     │     -     │   │     -     │     -     │     -     │
                                ___         ___         ___             ___         ___         ___
//                         ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯
)
